name: release

on:
  push:
    tags:
      - v*.*.*

permissions:
  contents: read

jobs:
  release-docker:
    name: Release Docker Image
    runs-on: ubuntu-latest
    env:
      DOCKER_IMAGE_NAME: observability/apm-attacher
    steps:
      - uses: actions/checkout@v4
      - name: Log in to the Elastic Container registry
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: ${{ secrets.ELASTIC_DOCKER_REGISTRY }}
          username: ${{ secrets.ELASTIC_DOCKER_USERNAME }}
          password: ${{ secrets.ELASTIC_DOCKER_PASSWORD }}
      - name: Docker build, tag, and push
        run: |
          make .webhook REPO=${{ secrets.ELASTIC_DOCKER_REGISTRY }} NAME=${DOCKER_IMAGE_NAME} TAG=${{ github.ref_name }}
          docker push ${{ secrets.ELASTIC_DOCKER_REGISTRY }}/${DOCKER_IMAGE_NAME}:${{ github.ref_name }}
          docker tag ${{ secrets.ELASTIC_DOCKER_REGISTRY }}/${DOCKER_IMAGE_NAME}:${{ github.ref_name }} ${{ secrets.ELASTIC_DOCKER_REGISTRY }}/${DOCKER_IMAGE_NAME}:latest
          docker push ${{ secrets.ELASTIC_DOCKER_REGISTRY }}/${DOCKER_IMAGE_NAME}:latest

  release-helm-charts:
    name: Release Helm Charts
    runs-on: ubuntu-latest
    steps:
      - uses: elastic/oblt-actions/buildkite/run@v1
        with:
          pipeline: "oblt-publish-helm-charts"
          token: ${{ secrets.BUILDKITE_TOKEN }}
          wait-for: true
          env-vars: |
            CHARTS_URL=https://github.com/${{ github.repository }}/archive/${{ github.ref_name }}.tar.gz
            HELM_REPO_ENV=prod

  release-notes:
    name: Release Notes
    runs-on: ubuntu-latest
    permissions:
      # Needed to create the release notes
      contents: write
    steps:
      - uses: actions/checkout@v4
      - run: make -C .ci release-notes
        env:
          BRANCH_NAME: ${{ github.ref_name }}
          GH_TOKEN: ${{ github.token }}

  status:
    if: always()
    needs:
      - release-docker
      - release-helm-charts
      - release-notes
    runs-on: ubuntu-latest
    steps:
      - id: check
        uses: elastic/apm-pipeline-library/.github/actions/check-dependent-jobs@current
        with:
          needs: ${{ toJSON(needs) }}
      - uses: elastic/oblt-actions/slack/notify-result@v1
        with:
          status: ${{ steps.check.outputs.status }}
          bot-token: ${{ secrets.SLACK_BOT_TOKEN }}
          channel-id: "#apm-agent-java"
          message: ':ghost: [${{ github.repository }}] Release *${{ github.ref_name }}* has been triggered in GitHub Actions. Build: (<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|here>)'
